name: "🚀 배포"

on:
  pull_request:
    types: [closed]
    branches: ["main"]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🍀 JDK 17 세팅
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 🔑 Gradle 실행 권한
        run: chmod +x gradlew

      - name: ♻️ Gradle 캐시
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 .env 생성
        env:
          DOTENV: ${{ secrets.DOTENV }}
        run: |
          printf '%s\n' "$DOTENV" > .env

      - name: 🧱 Gradle 빌드
        run: ./gradlew build --parallel

      - name: 📦 배포 산출물 구성
        run: |
          rm -rf before-deploy && mkdir -p before-deploy/scripts
          cp ./build/libs/*.jar ./before-deploy/
          cp ./.env ./before-deploy/
          # 스크립트와 systemd 유닛 템플릿 포함 (donggurami@.service 는 repo의 scripts/ 아래에 두세요)
          cp -r ./scripts/. ./before-deploy/scripts/

      - name: 🗜️ 패키징
        run: |
          cd before-deploy
          zip -r -qq ../deploy.zip .

      - name: 🔑 SSH 키 설정
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      - name: 🔑 Lightsail 호스트 known_hosts 추가
        run: |
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts

      - name: 📤 Lightsail에 업로드
        run: |
          scp ./deploy.zip ec2-user@${{ secrets.LIGHTSAIL_HOST }}:/home/ec2-user/deploy.zip

      - name: 📦 서버에서 압축 해제 및 systemd 유닛 설치
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} << 'EOSSH'
            set -euo pipefail
            # 작업 디렉터리 정리 및 배치
            rm -rf /home/ec2-user/app
            mkdir -p /home/ec2-user/app
            unzip -o /home/ec2-user/deploy.zip -d /home/ec2-user/app
            chmod +x /home/ec2-user/app/scripts/*.sh

            # systemd 템플릿 유닛 설치/갱신
            if [ ! -f /home/ec2-user/app/scripts/donggurami@.service ]; then
              echo "donggurami@.service not found in scripts/"; exit 1
            fi
            sudo install -m 0644 /home/ec2-user/app/scripts/donggurami@.service /etc/systemd/system/donggurami@.service
            sudo systemctl daemon-reload
          EOSSH

      - name: ▶️ 대상 포트 인스턴스 기동 (systemd, Blue/Green)
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/app/scripts/run_new_was.sh"

      - name: 🩺 헬스체크
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/app/scripts/health.sh"

      - name: 🔀 Nginx 전환
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/app/scripts/switch.sh"

      - name: 🧹 정리
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "rm -f /home/ec2-user/deploy.zip"
