name: 🚀 배포

on:
  pull_request:
    types: [ closed ]
    branches: [ "main" ]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🍀 JDK 17 세팅
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradlew 실행 권한 설정
        run: chmod +x gradlew

      - name: 🍀 Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: .env 생성
        env:
          DOTENV: ${{ secrets.DOTENV }}
        run: |
          printf '%s\n' "$DOTENV" > .env

      - name: 🍀 Gradle 빌드
        run: ./gradlew build --parallel

      - name: 📦 jar, appspec, 배포 스크립트 복사
        run: |
          mkdir -p before-deploy/scripts
          cp ./build/libs/*.jar ./before-deploy/
          cp ./.env ./before-deploy/
          cp -r ./scripts/. ./before-deploy/scripts/

      - name: 🗜️ 배포 패키지 생성
        run: |
          cd before-deploy
          zip -r -qq ../deploy.zip .

      - name: 🔑 SSH 키 설정
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      - name: 🔑 Lightsail 호스트 추가
        run: |
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 LightSail 서버에 파일 업로드
        run: |
          scp ./deploy.zip ec2-user@${{ secrets.LIGHTSAIL_HOST }}:/home/ec2-user/deploy.zip
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} << 'EOSSH'
            set -euo pipefail
            rm -rf /home/ec2-user/app
            mkdir -p /home/ec2-user/app
            unzip -o /home/ec2-user/deploy.zip -d /home/ec2-user/app
            chmod +x /home/ec2-user/app/scripts/*.sh
          EOSSH

      - name: 🎯 LightSail 서버에서 배포 실행 (AfterInstall)
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/app/scripts/run_new_was.sh"

      - name: 🎯 LightSail 서버에서 배포 실행 (ApplicationStart)
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/app/scripts/health.sh"

      - name: 🎯 LightSail 서버에서 배포 실행 (ValidateService)
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/app/scripts/switch.sh"

      - name: 🧹 임시 파일 정리
        run: ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "rm -f ~/deploy.zip"